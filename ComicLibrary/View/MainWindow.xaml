<fluent:RibbonWindow x:Class="ComicLibrary.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
                     xmlns:controls="clr-namespace:ES.Tools.Controls;assembly=ES.Tools"
                     xmlns:converters="clr-namespace:ES.Tools.Converters;assembly=ES.Tools"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:fluent="urn:fluent-ribbon"
                     xmlns:local="clr-namespace:ComicLibrary"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:properties="clr-namespace:ComicLibrary.Properties"
                     xmlns:toolsUI="clr-namespace:ES.Tools.UI;assembly=ES.Tools"
                     xmlns:vm="clr-namespace:ComicLibrary.ViewModel"
                     Title="Comic Library"
                     Icon="pack://application:,,,/ComicLibrary;component/Images/Icon.png"
                     WindowStartupLocation="CenterScreen"
                     WindowState="Maximized"
                     mc:Ignorable="d">
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <toolsUI:SharedResourceDictionary Source="pack://application:,,,/ComicLibrary;Component/View/CommonResources.xaml" />
        <toolsUI:SharedResourceDictionary Source="pack://application:,,,/ComicLibrary;Component/View/DataTemplates.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <converters:BooleanToVisibilityConverter x:Key="VisibilityConverter" />
      <converters:NegationConverter x:Key="NegationConverter" />
    </ResourceDictionary>
  </Window.Resources>
  <Window.DataContext>
    <vm:MainViewModel />
  </Window.DataContext>
  <Grid>
    <Grid IsEnabled="{Binding ShowLibrariesOverlay, Converter={StaticResource NegationConverter}}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <fluent:Ribbon>
        <fluent:Ribbon.Menu>
          <fluent:Backstage>
            <fluent:BackstageTabControl>
              <fluent:BackstageTabItem Header="{x:Static properties:Resources.Options}" Icon="pack://application:,,,/ComicLibrary;component/Images/Options.png">
                <StackPanel Margin="5,10,5,5" VerticalAlignment="Top">
                  <TextBlock FontSize="20" Text="{x:Static properties:Resources.Options}" />
                  <Grid Margin="0,5,0,0" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="2"
                               VerticalAlignment="Center"
                               Text="{x:Static properties:Resources.Countries}" />
                    <Button Grid.Column="1"
                            Margin="2"
                            Padding="5,2"
                            Command="{Binding EditCountriesCommand}"
                            Content="{x:Static properties:Resources.Edit}" />
                    <TextBlock Grid.Row="1"
                               Margin="2"
                               VerticalAlignment="Center"
                               Text="{x:Static properties:Resources.Publishers}" />
                    <Button Grid.Row="1"
                            Grid.Column="1"
                            Margin="2"
                            Padding="5,2"
                            Command="{Binding EditPublishersCommand}"
                            Content="{x:Static properties:Resources.Edit}" />
                  </Grid>
                </StackPanel>
              </fluent:BackstageTabItem>
              <fluent:BackstageTabItem Header="{x:Static properties:Resources.Settings}" Icon="pack://application:,,,/ComicLibrary;component/Images/Settings.png">
                <StackPanel Margin="5,10,5,5" VerticalAlignment="Top">
                  <TextBlock FontSize="20" Text="{x:Static properties:Resources.Settings}" />
                  <Grid Margin="0,5,0,0">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Margin="2" Text="{x:Static properties:Resources.LibrariesPath}" />
                    <TextBox Grid.Column="1"
                             Margin="2"
                             IsReadOnly="True"
                             Text="{Binding LibrariesPath}" />
                    <Button Grid.Column="2"
                            Margin="2"
                            Padding="2,0"
                            Command="{Binding ChangeLibraryCommand}"
                            Content="..." />
                  </Grid>
                </StackPanel>
              </fluent:BackstageTabItem>
              <fluent:Button Command="{Binding CloseCommand}"
                             Header="{x:Static properties:Resources.Close}"
                             Icon="pack://application:,,,/ComicLibrary;component/Images/Close.png" />
            </fluent:BackstageTabControl>
          </fluent:Backstage>
        </fluent:Ribbon.Menu>
        <fluent:RibbonTabItem Header="{x:Static properties:Resources.Start}" ReduceOrder="Comic, Comic, Comic, Comic, Library, Library, Library, Library, Libraries, Libraries, Libraries, Libraries">
          <fluent:RibbonGroupBox Name="Libraries" Header="{x:Static properties:Resources.Libraries}">
            <fluent:ToggleButton Header="{x:Static properties:Resources.Manage}"
                                 IsChecked="{Binding ShowLibrariesOverlay}"
                                 LargeIcon="pack://application:,,,/ComicLibrary;component/Images/Folder.png"
                                 SizeDefinition="Large">
              <fluent:ToggleButton.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.ManageLibraries}" Text="{x:Static properties:Resources.ManageLibrariesTooltip}" />
              </fluent:ToggleButton.ToolTip>
            </fluent:ToggleButton>
          </fluent:RibbonGroupBox>
          <fluent:RibbonGroupBox Name="Library"
                                 DataContext="{Binding SelectedLibrary}"
                                 Header="{x:Static properties:Resources.CurrentLibrary}">
            <fluent:RibbonGroupBox.Style>
              <Style TargetType="{x:Type fluent:RibbonGroupBox}">
                <Setter Property="IsEnabled" Value="True" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </fluent:RibbonGroupBox.Style>
            <fluent:Button Command="{Binding SaveLibraryCommand}"
                           Header="{x:Static properties:Resources.Save}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/Save.png"
                           SizeDefinition="Large">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.SaveLibrary}" Text="{x:Static properties:Resources.SaveLibraryTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
          </fluent:RibbonGroupBox>
          <fluent:RibbonGroupBox Name="Comic"
                                 DataContext="{Binding SelectedLibrary}"
                                 Header="{x:Static properties:Resources.Comic}">
            <fluent:RibbonGroupBox.Style>
              <Style TargetType="{x:Type fluent:RibbonGroupBox}">
                <Setter Property="IsEnabled" Value="True" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </fluent:RibbonGroupBox.Style>
            <fluent:Button Command="{Binding AddComicCommand}"
                           Header="{x:Static properties:Resources.Add}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/Add.png"
                           SizeDefinition="Large">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.AddComic}" Text="{x:Static properties:Resources.AddComicTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
            <fluent:Button Command="{Binding RemoveComicCommand}"
                           Header="{x:Static properties:Resources.Remove}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/Remove.png"
                           SizeDefinition="Large">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.RemoveComic}" Text="{x:Static properties:Resources.RemoveComicTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
          </fluent:RibbonGroupBox>
        </fluent:RibbonTabItem>
      </fluent:Ribbon>
      <TabControl Grid.Row="1"
                  ItemsSource="{Binding ActiveLibraries}"
                  SelectedItem="{Binding SelectedLibrary}">
        <TabControl.ItemTemplate>
          <!--  this is the header template  -->
          <DataTemplate>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <TextBlock VerticalAlignment="Stretch" Text="{Binding Name}" />
              <controls:AutoGrayableImage Grid.Column="1"
                                          Width="12"
                                          Height="12"
                                          Margin="5,0,0,0"
                                          Source="pack://application:,,,/ComicLibrary;component/Images/Close.png">
                <behaviors:Interaction.Triggers>
                  <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                    <behaviors:InvokeCommandAction Command="{Binding DataContext.CloseLibraryCommand, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" CommandParameter="{Binding}" />
                  </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
              </controls:AutoGrayableImage>
            </Grid>
          </DataTemplate>
        </TabControl.ItemTemplate>
      </TabControl>
      <fluent:StatusBar Grid.Row="2" HorizontalAlignment="Stretch">
        <fluent:StatusBarItem Title="{x:Static properties:Resources.Comics}"
                              Margin="5,0"
                              HorizontalAlignment="Left">
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding SelectedLibrary.Comics.Count, FallbackValue=0}" />
            <TextBlock Text=" " />
            <TextBlock Text="{x:Static properties:Resources.Comics}" />
          </StackPanel>
        </fluent:StatusBarItem>
      </fluent:StatusBar>
    </Grid>

    <Grid Visibility="{Binding ShowLibrariesOverlay, Converter={StaticResource VisibilityConverter}}">
      <Border MinWidth="300"
              MinHeight="100"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Background="White"
              BorderBrush="Gray"
              BorderThickness="1">
        <Border.Effect>
          <DropShadowEffect Direction="-45" Color="LightGray" />
        </Border.Effect>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
          </Grid.RowDefinitions>
          <Border Background="LightGray">
            <DockPanel>
              <Image Width="16"
                     Height="16"
                     Margin="1"
                     HorizontalAlignment="Right"
                     DockPanel.Dock="Right"
                     Source="pack://application:,,,/ComicLibrary;component/Images/CancelSmall.png">
                <behaviors:Interaction.Triggers>
                  <behaviors:EventTrigger EventName="MouseLeftButtonUp">
                    <behaviors:InvokeCommandAction Command="{Binding CancelEditLibrariesCommand}" />
                  </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
              </Image>
              <TextBlock Margin="1"
                         VerticalAlignment="Center"
                         Text="{x:Static properties:Resources.Libraries}" />
            </DockPanel>
          </Border>
          <ScrollViewer Grid.Row="1"
                        HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding Libraries}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
            </ItemsControl>
          </ScrollViewer>
        </Grid>
      </Border>
    </Grid>
  </Grid>
</fluent:RibbonWindow>
