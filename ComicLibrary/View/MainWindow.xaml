<fluent:RibbonWindow x:Class="ComicLibrary.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:properties="clr-namespace:ComicLibrary.Properties"
                     xmlns:vm="clr-namespace:ComicLibrary.ViewModel"
                     xmlns:esConverters="clr-namespace:ES.Tools.Converters;assembly=ES.Tools"
                     xmlns:toolsUI="clr-namespace:ES.Tools.UI;assembly=ES.Tools"
                     xmlns:avalonDock="https://github.com/Dirkster99/AvalonDock"
                     xmlns:fluent="urn:fluent-ribbon"
                     Title="Comic Library"
                     d:DesignHeight="450"
                     d:DesignWidth="800"
                     Icon="pack://application:,,,/ComicLibrary;component/Images/Icon.png"
                     WindowStartupLocation="CenterScreen"
                     WindowState="Maximized"
                     mc:Ignorable="d">
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <toolsUI:SharedResourceDictionary Source="pack://application:,,,/ComicLibrary;Component/View/CommonResources.xaml" />
        <toolsUI:SharedResourceDictionary Source="pack://application:,,,/ComicLibrary;Component/View/DataTemplates.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <esConverters:BooleanToVisibilityConverter x:Key="VisibilityConverter" />
      <esConverters:NegationConverter x:Key="NegationConverter" />
     </ResourceDictionary>
  </Window.Resources>
  <Window.DataContext>
    <vm:MainViewModel />
  </Window.DataContext>
  <Grid>
    <Grid IsEnabled="{Binding ShowLibrariesOverlay, Converter={StaticResource NegationConverter}}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <fluent:Ribbon CanUseSimplified="True">
        <fluent:Ribbon.Menu>
          <fluent:Backstage>
            <fluent:BackstageTabControl>
              <fluent:BackstageTabItem Header="{x:Static properties:Resources.Options}" Icon="pack://application:,,,/ComicLibrary;component/Images/Options.png">
                <StackPanel Margin="10,15,10,10" VerticalAlignment="Top">
                  <TextBlock Margin="0,0,0,10"
                             FontSize="20"
                             Text="{x:Static properties:Resources.Options}" />
                  <Grid Margin="0,10,0,0" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="5"
                               VerticalAlignment="Center"
                               Text="{x:Static properties:Resources.Countries}" />
                    <Button Grid.Column="1"
                            Margin="5"
                            Padding="5,2"
                            Command="{Binding EditCountriesCommand}"
                            Content="{x:Static properties:Resources.Edit}" />
                    <TextBlock Grid.Row="1"
                               Margin="5"
                               VerticalAlignment="Center"
                               Text="{x:Static properties:Resources.Languages}" />
                    <Button Grid.Row="1"
                            Grid.Column="1"
                            Margin="5"
                            Padding="5,2"
                            Command="{Binding EditLanguagesCommand}"
                            Content="{x:Static properties:Resources.Edit}" />
                    <TextBlock Grid.Row="2"
                               Margin="5"
                               VerticalAlignment="Center"
                               Text="{x:Static properties:Resources.Publishers}" />
                    <Button Grid.Row="2"
                            Grid.Column="1"
                            Margin="5"
                            Padding="5,2"
                            Command="{Binding EditPublishersCommand}"
                            Content="{x:Static properties:Resources.Edit}" />
                    <TextBlock Grid.Row="3"
                               Margin="5"
                               VerticalAlignment="Center"
                               Text="{x:Static properties:Resources.Currency}" />
                    <TextBox Grid.Row="3"
                             Grid.Column="1"
                             Margin="5"
                             Padding="5,2"
                             Text="{Binding CurrencySymbol, UpdateSourceTrigger=PropertyChanged}" />
                  </Grid>
                </StackPanel>
              </fluent:BackstageTabItem>
              <fluent:BackstageTabItem Header="{x:Static properties:Resources.Settings}" Icon="pack://application:,,,/ComicLibrary;component/Images/Settings.png">
                <StackPanel Margin="10,15,10,10" VerticalAlignment="Top">
                  <TextBlock Margin="0,0,0,10"
                             FontSize="20"
                             Text="{x:Static properties:Resources.Settings}" />
                  <Grid Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Margin="2" Text="{x:Static properties:Resources.LibrariesPath}" />
                    <TextBox Grid.Column="1"
                             Margin="2"
                             IsReadOnly="True"
                             Text="{Binding LibrariesPath}" />
                    <Button Grid.Column="2"
                            Margin="2"
                            Padding="2,0"
                            Command="{Binding ChangeLibraryPathCommand}"
                            Content="..." />
                  </Grid>
                  <CheckBox Margin="0,10,0,0"
                            Content="{x:Static properties:Resources.CopyDataFromSelectedComic}"
                            IsChecked="{Binding CopyDataFromSelectedComic, UpdateSourceTrigger=PropertyChanged}" />
                  <CheckBox Margin="0,10,0,0"
                            Content="{x:Static properties:Resources.CreateBackupWhenSaving}"
                            IsChecked="{Binding CreateBackupWhenSaving, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
              </fluent:BackstageTabItem>
              <fluent:Button Command="{Binding CloseCommand}"
                             Header="{x:Static properties:Resources.Close}"
                             Icon="pack://application:,,,/ComicLibrary;component/Images/Close.png" />
            </fluent:BackstageTabControl>
          </fluent:Backstage>
        </fluent:Ribbon.Menu>
        <fluent:RibbonTabItem Header="{x:Static properties:Resources.Start}" ReduceOrder="Manage, Manage, Manage, Library, Library, Library, Comic, Comic, Comic, Manage, Library, Comic">
          <fluent:RibbonGroupBox Name="Manage"
                                 Header="{x:Static properties:Resources.Manage}"
                                 Icon="pack://application:,,,/ComicLibrary;component/Images/ManageLibraries.png">
            <fluent:ToggleButton Header="{x:Static properties:Resources.Manage}"
                                 IsChecked="{Binding ShowLibrariesOverlay}"
                                 LargeIcon="pack://application:,,,/ComicLibrary;component/Images/ManageLibraries.png"
                                 SizeDefinition="Large">
              <fluent:ToggleButton.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.ManageLibraries}" Text="{x:Static properties:Resources.ManageLibrariesTooltip}" />
              </fluent:ToggleButton.ToolTip>
            </fluent:ToggleButton>
          </fluent:RibbonGroupBox>
          <fluent:RibbonGroupBox Name="Library"
                                 Header="{x:Static properties:Resources.Library}"
                                 Icon="pack://application:,,,/ComicLibrary;component/Images/Library.png"
                                 IsEnabled="{Binding HasActiveLibrary}">
            <fluent:Button Command="{Binding SelectedLibrary.SaveLibraryCommand}"
                           Header="{x:Static properties:Resources.Save}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/Save.png">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.SaveLibrary}" Text="{x:Static properties:Resources.SaveLibraryTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
            <fluent:Button Command="{Binding SelectedLibrary.RenameSeriesCommand}"
                           Header="{x:Static properties:Resources.RenameSeries}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/Rename.png">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.RenameSeries}" Text="{x:Static properties:Resources.RenameSeriesTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
            <fluent:Button Command="{Binding SelectedLibrary.CloseCommand}"
                           Header="{x:Static properties:Resources.Close}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/Close.png">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.CloseLibrary}" Text="{x:Static properties:Resources.CloseLibraryTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
            <fluent:Button Command="{Binding SelectedLibrary.ShowChartCommand}"
                           Header="{x:Static properties:Resources.ShowChart}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/Chart.png">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.ShowChart}" Text="{x:Static properties:Resources.ShowChartTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
          </fluent:RibbonGroupBox>
          <fluent:RibbonGroupBox Name="Comic"
                                 Header="{x:Static properties:Resources.Comic}"
                                 Icon="pack://application:,,,/ComicLibrary;component/Images/Comic.png"
                                 IsEnabled="{Binding HasActiveLibrary}">
            <fluent:Button Command="{Binding SelectedLibrary.AddComicCommand}"
                           Header="{x:Static properties:Resources.Add}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/Add.png">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.AddComic}" Text="{x:Static properties:Resources.AddComicTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
            <fluent:Button Command="{Binding SelectedLibrary.RemoveComicCommand}"
                           Header="{x:Static properties:Resources.Remove}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/Remove.png">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.RemoveComic}" Text="{x:Static properties:Resources.RemoveComicTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
            <fluent:Button Command="{Binding SelectedLibrary.CutCommand}"
                           Header="{x:Static properties:Resources.Cut}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/CutSmall.png"
                           SizeDefinition="Middle Middle Small">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.Cut}" Text="{x:Static properties:Resources.CutTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
            <fluent:Button Command="{Binding SelectedLibrary.CopyCommand}"
                           Header="{x:Static properties:Resources.Copy}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/CopySmall.png"
                           SizeDefinition="Middle Middle Small">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.Copy}" Text="{x:Static properties:Resources.CopyTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
            <fluent:Button Command="{Binding SelectedLibrary.PasteCommand}"
                           Header="{x:Static properties:Resources.Paste}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/PasteSmall.png"
                           SizeDefinition="Middle Middle Small">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.Paste}" Text="{x:Static properties:Resources.PasteTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
            <fluent:DropDownButton Header="{x:Static properties:Resources.MoveToLibrary}" LargeIcon="pack://application:,,,/ComicLibrary;component/Images/MoveToLibrary.png">
              <fluent:DropDownButton.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.MoveToLibrary}" Text="{x:Static properties:Resources.MoveToLibraryTooltip}" />
              </fluent:DropDownButton.ToolTip>
              <fluent:MenuItem Command="{Binding SelectedLibrary.MoveComicToLibraryCommand}"
                               Header="{x:Static properties:Resources.Comic}"
                               Icon="pack://application:,,,/ComicLibrary;component/Images/Comic.png" />
              <fluent:MenuItem Command="{Binding SelectedLibrary.MoveSeriesToLibraryCommand}"
                               Header="{x:Static properties:Resources.Series}"
                               Icon="pack://application:,,,/ComicLibrary;component/Images/Series.png" />
            </fluent:DropDownButton>
          </fluent:RibbonGroupBox>
        </fluent:RibbonTabItem>
        <fluent:RibbonTabItem Header="{x:Static properties:Resources.Reports}" ReduceOrder="Report, Report, Report, List, List, List, Report, List">
          <fluent:RibbonGroupBox Name="Report"
                                 Header="{x:Static properties:Resources.PrintReport}"
                                 Icon="pack://application:,,,/ComicLibrary;component/Images/Print.png"
                                 IsEnabled="{Binding HasActiveLibrary}">
            <fluent:Button Command="{Binding SelectedLibrary.PrintReportCommand}"
                           Header="{x:Static properties:Resources.Print}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/Report.png">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.PrintReport}" Text="{x:Static properties:Resources.PrintReportTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
            <fluent:CheckBox Header="{x:Static properties:Resources.Series}" IsChecked="{Binding SelectedLibrary.PrintSeries}"/>
            <fluent:CheckBox Header="{x:Static properties:Resources.Year}" IsChecked="{Binding SelectedLibrary.PrintYear}"/>
            <fluent:CheckBox Header="{x:Static properties:Resources.IssueNumber}" IsChecked="{Binding SelectedLibrary.PrintIssueNumber}"/>
            <fluent:CheckBox Header="{x:Static properties:Resources.Title}" IsChecked="{Binding SelectedLibrary.PrintTitle}"/>
            <fluent:CheckBox Header="{x:Static properties:Resources.Condition}" IsChecked="{Binding SelectedLibrary.PrintCondition}"/>
            <fluent:CheckBox Header="{x:Static properties:Resources.PurchasePrice}" IsChecked="{Binding SelectedLibrary.PrintPurchasePrice}"/>
          </fluent:RibbonGroupBox>
          <fluent:RibbonGroupBox Name="List"
                                 Header="{x:Static properties:Resources.PrintList}"
                                 Icon="pack://application:,,,/ComicLibrary;component/Images/Print.png"
                                 IsEnabled="{Binding HasActiveLibrary}">
            <fluent:Button Command="{Binding SelectedLibrary.PrintListCommand}"
                           Header="{x:Static properties:Resources.Print}"
                           LargeIcon="pack://application:,,,/ComicLibrary;component/Images/List.png">
              <fluent:Button.ToolTip>
                <fluent:ScreenTip Title="{x:Static properties:Resources.PrintList}" Text="{x:Static properties:Resources.PrintListTooltip}" />
              </fluent:Button.ToolTip>
            </fluent:Button>
            <fluent:CheckBox Header="{x:Static properties:Resources.ReduceIssues}" IsChecked="{Binding SelectedLibrary.ReduceIssues}" />
            <fluent:CheckBox Header="{x:Static properties:Resources.ExcludeLowGrades}" IsChecked="{Binding SelectedLibrary.ExcludeLowGrades}" />
            <fluent:ComboBox Header="{x:Static properties:Resources.LowerThan}"
                             IsEnabled="{Binding SelectedLibrary.ExcludeLowGrades}"
                             ItemsSource="{Binding SelectedLibrary.LowGrades}"
                             SelectedItem="{Binding SelectedLibrary.ExcludedGradeThreshold}">
            </fluent:ComboBox>
          </fluent:RibbonGroupBox>
        </fluent:RibbonTabItem>
      </fluent:Ribbon>

      <avalonDock:DockingManager x:Name="dockingManager"
                                 Grid.Row="1"
                                 ActiveContent="{Binding SelectedLibrary, Mode=TwoWay}"
                                 Background="White"
                                 DocumentsSource="{Binding ActiveLibraries}">
        <avalonDock:DockingManager.Theme>
          <avalonDock:MetroTheme />
        </avalonDock:DockingManager.Theme>
        <avalonDock:DockingManager.LayoutItemContainerStyle>
          <Style TargetType="{x:Type avalonDock:LayoutItem}">
            <Setter Property="Title" Value="{Binding Model.Name}" />
            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
            <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
          </Style>
        </avalonDock:DockingManager.LayoutItemContainerStyle>
      </avalonDock:DockingManager>

      <fluent:StatusBar Grid.Row="2" HorizontalAlignment="Stretch">
        <fluent:StatusBarItem Title="{x:Static properties:Resources.TotalPrice}" HorizontalAlignment="Right">
          <StackPanel Orientation="Horizontal">
            <TextBlock FontWeight="Bold" Text="{Binding SelectedLibrary.TotalPrice, StringFormat=F2, FallbackValue=0}" />
            <TextBlock Text=" " />
            <TextBlock Text="{Binding CurrencySymbol}" />
            <TextBlock Text=" " />
            <TextBlock Text="{x:Static properties:Resources.TotalPrice}" />
          </StackPanel>
        </fluent:StatusBarItem>

        <Separator HorizontalAlignment="Right" />

        <fluent:StatusBarItem Title="{x:Static properties:Resources.TotalValue}" HorizontalAlignment="Right">
          <StackPanel Orientation="Horizontal">
            <TextBlock FontWeight="Bold" Text="{Binding SelectedLibrary.TotalValue, StringFormat=F2, FallbackValue=0}" />
            <TextBlock Text=" " />
            <TextBlock Text="{Binding CurrencySymbol}" />
            <TextBlock Text=" " />
            <TextBlock Text="{x:Static properties:Resources.TotalValue}" />
          </StackPanel>
        </fluent:StatusBarItem>

        <Separator HorizontalAlignment="Right" />

        <fluent:StatusBarItem Title="{x:Static properties:Resources.Comics}"
                              Margin="0,0,10,0"
                              HorizontalAlignment="Right">
          <StackPanel Orientation="Horizontal">
            <TextBlock FontWeight="Bold" Text="{Binding SelectedLibrary.Comics.Count, FallbackValue=0}" />
            <TextBlock Text=" " />
            <TextBlock Text="{x:Static properties:Resources.Comics}" />
          </StackPanel>
        </fluent:StatusBarItem>

        <fluent:StatusBarItem Title="{x:Static properties:Resources.PurchasePrice}"
                              Margin="10,0,0,0"
                              HorizontalAlignment="Left">
          <StackPanel Orientation="Horizontal">
            <TextBlock FontWeight="Bold" Text="{Binding SelectedLibrary.SelectedComic.PurchasePrice, TargetNullValue=0, StringFormat=F2, FallbackValue=0}" />
            <TextBlock Text=" " />
            <TextBlock Text="{Binding CurrencySymbol}" />
            <TextBlock Text=" " />
            <TextBlock Text="{x:Static properties:Resources.PurchasePrice}" />
          </StackPanel>
        </fluent:StatusBarItem>

        <Separator HorizontalAlignment="Left" />

        <fluent:StatusBarItem Title="{x:Static properties:Resources.EstimatedValue}" HorizontalAlignment="Left">
          <StackPanel Orientation="Horizontal">
            <TextBlock FontWeight="Bold" Text="{Binding SelectedLibrary.SelectedComic.EstimatedValue, TargetNullValue=0, StringFormat=F2, FallbackValue=0}" />
            <TextBlock Text=" " />
            <TextBlock Text="{Binding CurrencySymbol}" />
            <TextBlock Text=" " />
            <TextBlock Text="{x:Static properties:Resources.EstimatedValue}" />
          </StackPanel>
        </fluent:StatusBarItem>
      </fluent:StatusBar>
    </Grid>

    <Grid Visibility="{Binding ShowLibrariesOverlay, Converter={StaticResource VisibilityConverter}}">
      <Border MinWidth="300"
              MinHeight="100"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Background="White"
              BorderBrush="Gray"
              BorderThickness="1">
        <Border.Effect>
          <DropShadowEffect Direction="-45" Color="LightGray" />
        </Border.Effect>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
          </Grid.RowDefinitions>
          <Border Background="LightGray">
            <DockPanel>
              <Image Width="16"
                     Height="16"
                     Margin="1"
                     HorizontalAlignment="Right"
                     DockPanel.Dock="Right"
                     Source="pack://application:,,,/ComicLibrary;component/Images/CancelSmall.png">
                <behaviors:Interaction.Triggers>
                  <behaviors:EventTrigger EventName="MouseLeftButtonUp">
                    <behaviors:InvokeCommandAction Command="{Binding CancelEditLibrariesCommand}" />
                  </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
              </Image>
              <TextBlock Margin="1"
                         VerticalAlignment="Center"
                         Text="{x:Static properties:Resources.Libraries}" />
            </DockPanel>
          </Border>
          <ScrollViewer Grid.Row="1"
                        HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding Libraries}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
            </ItemsControl>
          </ScrollViewer>
        </Grid>
      </Border>
    </Grid>
  </Grid>
</fluent:RibbonWindow>
